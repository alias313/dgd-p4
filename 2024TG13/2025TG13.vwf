/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 25.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("ini")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ent")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ent[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ent";
}

SIGNAL("ent[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ent";
}

SIGNAL("ent[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ent";
}

SIGNAL("ent[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ent";
}

SIGNAL("ent[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ent";
}

SIGNAL("ent[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ent";
}

SIGNAL("ent[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ent";
}

SIGNAL("ent[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ent";
}

SIGNAL("ck")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("rs")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("min")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("min[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "min";
}

SIGNAL("min[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "min";
}

SIGNAL("min[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "min";
}

SIGNAL("min[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "min";
}

SIGNAL("min[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "min";
}

SIGNAL("min[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "min";
}

SIGNAL("min[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "min";
}

SIGNAL("min[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "min";
}

SIGNAL("max")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("max[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "max";
}

SIGNAL("max[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "max";
}

SIGNAL("max[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "max";
}

SIGNAL("max[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "max";
}

SIGNAL("max[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "max";
}

SIGNAL("max[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "max";
}

SIGNAL("max[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "max";
}

SIGNAL("max[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "max";
}

SIGNAL("mitj")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("mitj[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mitj";
}

SIGNAL("mitj[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mitj";
}

SIGNAL("mitj[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mitj";
}

SIGNAL("mitj[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mitj";
}

SIGNAL("mitj[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mitj";
}

SIGNAL("mitj[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mitj";
}

SIGNAL("mitj[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mitj";
}

SIGNAL("mitj[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mitj";
}

TRANSITION_LIST("ini")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 650.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 250.0;
	}
}

TRANSITION_LIST("ent[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("ent[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("ent[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 350.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 500.0;
	}
}

TRANSITION_LIST("ent[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 500.0;
	}
}

TRANSITION_LIST("ent[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("ent[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
	}
}

TRANSITION_LIST("ent[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
	}
}

TRANSITION_LIST("ent[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 200.0;
	}
}

TRANSITION_LIST("ck")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 20;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
	}
}

TRANSITION_LIST("rs")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 975.0;
	}
}

TRANSITION_LIST("min[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("min[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("min[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 733.92;
		LEVEL 1 FOR 266.08;
	}
}

TRANSITION_LIST("min[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 31.755;
		LEVEL 1 FOR 700.0;
		LEVEL 0 FOR 268.245;
	}
}

TRANSITION_LIST("min[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 31.683;
		LEVEL 1 FOR 700.0;
		LEVEL 0 FOR 268.317;
	}
}

TRANSITION_LIST("min[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 31.915;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 168.085;
	}
}

TRANSITION_LIST("min[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 831.428;
		LEVEL 1 FOR 168.572;
	}
}

TRANSITION_LIST("min[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 731.699;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 168.301;
	}
}

TRANSITION_LIST("max[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("max[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("max[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 131.896;
		LEVEL 1 FOR 868.104;
	}
}

TRANSITION_LIST("max[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 31.875;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 868.125;
	}
}

TRANSITION_LIST("max[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 31.679;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 850.0;
		LEVEL 1 FOR 18.321;
	}
}

TRANSITION_LIST("max[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 31.638;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 750.0;
		LEVEL 0 FOR 18.362;
	}
}

TRANSITION_LIST("max[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 81.45;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 18.55;
	}
}

TRANSITION_LIST("max[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 731.653;
		LEVEL 1 FOR 268.347;
	}
}

TRANSITION_LIST("mitj[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("mitj[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("mitj[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 132.899;
		LEVEL 1 FOR 0.419;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 766.682;
	}
}

TRANSITION_LIST("mitj[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 32.868;
		LEVEL 1 FOR 99.389;
		LEVEL 0 FOR 0.735;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 499.302;
		LEVEL 1 FOR 0.201;
		LEVEL 0 FOR 267.505;
	}
}

TRANSITION_LIST("mitj[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 32.126;
		LEVEL 1 FOR 0.376;
		LEVEL 0 FOR 0.373;
		LEVEL 1 FOR 99.627;
		LEVEL 0 FOR 0.436;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 499.188;
		LEVEL 1 FOR 0.749;
		LEVEL 0 FOR 249.815;
		LEVEL 1 FOR 0.248;
		LEVEL 0 FOR 17.062;
	}
}

TRANSITION_LIST("mitj[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 32.803;
		LEVEL 1 FOR 0.184;
		LEVEL 0 FOR 0.379;
		LEVEL 1 FOR 99.437;
		LEVEL 0 FOR 0.563;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 499.621;
		LEVEL 1 FOR 100.026;
		LEVEL 0 FOR 0.537;
		LEVEL 1 FOR 149.253;
		LEVEL 0 FOR 0.563;
		LEVEL 1 FOR 16.634;
	}
}

TRANSITION_LIST("mitj[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 32.373;
		LEVEL 1 FOR 0.356;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 599.644;
		LEVEL 1 FOR 0.852;
		LEVEL 0 FOR 149.504;
		LEVEL 1 FOR 17.271;
	}
}

TRANSITION_LIST("mitj[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 82.742;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.389;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 49.945;
		LEVEL 1 FOR 0.055;
		LEVEL 0 FOR 99.611;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 17.258;
	}
}

DISPLAY_LINE
{
	CHANNEL = "rs";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ck";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ini";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ent";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "ent[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "ent[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "ent[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "ent[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "ent[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "ent[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "ent[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "ent[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "min";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16, 17, 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "min[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "min[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "min[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "min[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "min[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "min[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "min[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "min[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "max";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25, 26, 27, 28, 29;
}

DISPLAY_LINE
{
	CHANNEL = "max[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "max[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "max[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "max[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "max[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "max[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "max[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "max[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "mitj";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
	CHILDREN = 31, 32, 33, 34, 35, 36, 37, 38;
}

DISPLAY_LINE
{
	CHANNEL = "mitj[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "mitj[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "mitj[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "mitj[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "mitj[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "mitj[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "mitj[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "mitj[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 30;
}

TIME_BAR
{
	TIME = 23125;
	MASTER = TRUE;
}
;
